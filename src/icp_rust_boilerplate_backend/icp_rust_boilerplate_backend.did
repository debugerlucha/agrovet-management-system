type Agrovet = record {
  id : nat64;
  contact : text;
  name : text;
  created_at : nat64;
  email : text;
  products : vec text;
  location : text;
};
type CreateAgrovetPayload = record {
  contact : text;
  name : text;
  email : text;
  products : vec text;
  location : text;
};
type CreateFeedbackPayload = record {
  comment : text;
  rating : float32;
  customer_name : text;
  agrovet_id : nat64;
};
type CreateOrderPayload = record {
  product_id : nat64;
  quantity : nat64;
  customer_name : text;
};
type CreateProductPayload = record {
  name : text;
  stock : nat64;
  category : text;
  price : nat64;
  agrovet_id : nat64;
};
type Feedback = record {
  id : nat64;
  comment : text;
  timestamp : nat64;
  rating : float32;
  customer_name : text;
  agrovet_id : nat64;
};
type Message = variant {
  Error : text;
  InvalidPayload : text;
  NotFound : text;
  Success : text;
};
type Order = record {
  id : nat64;
  status : text;
  product_id : nat64;
  total_price : nat64;
  order_date : nat64;
  quantity : nat64;
  customer_name : text;
};
type Product = record {
  id : nat64;
  name : text;
  stock : nat64;
  category : text;
  is_available : bool;
  price : nat64;
  agrovet_id : nat64;
};
type Result = variant { Ok : Agrovet; Err : Message };
type Result_1 = variant { Ok : Feedback; Err : Message };
type Result_2 = variant { Ok : Order; Err : Message };
type Result_3 = variant { Ok : Product; Err : Message };
type Result_4 = variant { Ok : vec Feedback; Err : Message };
type Result_5 = variant { Ok : vec Order; Err : Message };
type Result_6 = variant { Ok : vec Product; Err : Message };
type Result_7 = variant {
  Ok : vec record { text; nat64; bool };
  Err : Message;
};
type Result_8 = variant { Ok : vec Agrovet; Err : Message };
type UpdateAgrovetPayload = record {
  id : nat64;
  contact : opt text;
  name : opt text;
  email : opt text;
  location : opt text;
};
service : {
  create_agrovet : (CreateAgrovetPayload) -> (Result);
  create_feedback : (CreateFeedbackPayload) -> (Result_1);
  create_order : (CreateOrderPayload) -> (Result_2);
  create_product : (CreateProductPayload) -> (Result_3);
  get_agrovet_by_id : (nat64) -> (Result) query;
  get_feedback_by_agrovet_id : (nat64) -> (Result_4) query;
  get_orders_by_agrovet_id : (nat64) -> (Result_5) query;
  get_products_by_agrovet_id : (nat64) -> (Result_6) query;
  get_stock_summary : () -> (Result_7) query;
  list_all_agrovets : () -> (Result_8) query;
  update_agrovet : (UpdateAgrovetPayload) -> (Result);
}
